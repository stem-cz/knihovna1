use_package("tidyverse")
use_package("haven")
use_package("labelled")
use_package("berryFunctions")
use_package("finalfit")
use_package("xlsx")
library(devtools)
use_package("tidyverse")
use_package("tidyverse", type = "depends")
use_package("haven", type = "depends")
use_package("labelled", type = "depends")
use_package("berryFunctions", type = "depends")
use_package("finalfit", type = "depends")
use_package("xlsx", type = "depends")
use_package("haven", Imports = "depends")
use_package("haven")
use_package("tidyverse", type = "depends")
use_package("haven")
use_package("tidyverse", type = "depends")
use_package("haven")
use_package("labelled")
use_package("berryFunctions")
use_package("finalfit")
use_package("xlsx")
library(devtools)
use_package("tidyverse", type = "depends")
use_package("haven")
use_package("labelled")
use_package("berryFunctions")
use_package("finalfit")
use_package("xlsx")
f_krizeni <- function (df, vektor_radek, vektor_sloupec, w = "w", jmeno_souboru = "krizeni") {
df <- df %>% rename(w = !!as.symbol(w))
df <-  df %>% mutate_at(vars(-w),to_factor)
#------------------------------ Zpracování proměnných pro řádky-----------------------------------------------------------------
long_data_base <- pivot_longer(df,all_of(vektor_radek),names_to = "otazka",values_to = "odpovedi")
# long_data_base <<- long_data_base
# Celkový počet odpovědí na otázku pro všechny zvolené otázky
vahy_otazek <- long_data_base %>% filter(odpovedi != is.na(odpovedi) & odpovedi != "sys_filtered_off" & odpovedi != "sys_empty") %>% group_by(otazka)  %>% summarise(vaha_otazka = sum(w)) #round
# Počet odpovědí na jednotlivé varianty odpovědí pro všechny zvolené otázky
long_data <- long_data_base %>% filter(odpovedi != is.na(odpovedi) & odpovedi != "sys_filtered_off" & odpovedi != "sys_empty") %>% group_by(otazka,odpovedi) %>% summarise(w = sum(w))
# long_data <<- long_data
#Tvorba df se zněním otázek
z <-as.data.frame(unlist(sapply(df, var_label)))
z <- rownames_to_column(z, var = "otazka")
names(z)[2] <- "Zneni"
# Připojení znění otázek k tabulce s variantami odpovědí
long_data <- long_data %>% left_join(z, by = "otazka")
# long_data <- long_data %>% mutate(r = w) #round
# Připojení celkové váhy otázek k tabulce s variantami odpovědí a výpočet procent
long_data <- long_data %>% left_join(vahy_otazek, by = "otazka")
long_data <- long_data %>% mutate(procenta =round(w/vaha_otazka*100,1))
long_data <<- long_data
#---------------------------------------------Zpracování proměnných pro sloupce----------------------------------------------------------------
#Tvorba dlouhých dat a součty pro jednotlivé varianty odpovědí
long_data_columns <- pivot_longer(df,all_of(vektor_sloupec),names_to = "otazka",values_to = "odpovedi")
long_data_columns2 <- long_data_columns %>% filter(odpovedi != is.na(odpovedi) & odpovedi != "sys_filtered_off" & odpovedi != "sys_empty") %>% group_by(otazka,odpovedi) %>% summarise(r = sum(w)) #round
long_data_columns2 <<- long_data_columns2
#příprava tabulky pro x_square
x_square_base <- long_data %>% select(otazka,odpovedi)
# příprava tabulky pro počet řádek
pocet_radek <- tibble(moznosti =NULL, vaha_skupina = NULL, otazka = NULL)
#-------------------------------------------------Křížení------------------------------------------------------------------
for (name in vektor_sloupec) {
#počet odpovědí pro jednotlivé křížené možnosti
krizeni <- long_data_base %>% filter(odpovedi != is.na(odpovedi)& odpovedi != "sys_filtered_off" & odpovedi != "sys_empty") %>% group_by(otazka,odpovedi,!!as.symbol(name)) %>% summarise(r = sum(w)) %>% filter (!!as.symbol(name) != is.na(!!as.symbol(name))) #round
#počet odpověedí pro jednotlivé křížené otázky
vahy_skupiny <- long_data_base %>% filter(odpovedi != is.na(odpovedi) & odpovedi != "sys_filtered_off" & odpovedi != "sys_empty") %>% group_by(otazka,!!as.symbol(name)) %>% summarise(vaha_skupina = sum(w)) %>% filter (!!as.symbol(name) != is.na(!!as.symbol(name))) #round
vahy_skupiny <- vahy_skupiny %>% ungroup ()
#propojení počtu odpovědí pro možnosti a celou otázku v křížení a výpočet procent
krizeni <- krizeni %>% left_join(vahy_skupiny, by = c("otazka" = "otazka", setNames(name,name) ))
krizeni <- krizeni  %>% mutate(procenta = round(r/vaha_skupina*100,1))
# krizeni <<-krizeni
#----------------------------x_square-------------------------------------------------------------------------------------------------
# četnost konkrétních variant odpovědí (nekřížená)
x_square <- krizeni %>% group_by(otazka,odpovedi) %>% summarize(popularita_odpovedi_w = round(sum(r))) #round
# připojení četností konkrétních variant odpovědí ke křížené tabulce
x_square <- x_square %>% right_join(select(krizeni,otazka,odpovedi,r,vaha_skupina,!!as.symbol(name)), by = c("otazka" = "otazka", "odpovedi" = "odpovedi"))
#váha skupiny
x_square <- x_square %>% mutate(vaha_skupina = round(vaha_skupina))
#váha celé otázky
vaha_filter_otazka <- krizeni %>% group_by(otazka) %>% summarize(vaha_otazka = round(sum(r)))
x_square <- x_square %>% right_join(vaha_filter_otazka, by = "otazka")
#výpočet adjustovaných standardizovaných reziduií
x_square <- x_square %>% mutate(std_rez = (r-(popularita_odpovedi_w*vaha_skupina)/vaha_otazka)/(sqrt(popularita_odpovedi_w*vaha_skupina*(1-popularita_odpovedi_w/vaha_otazka)*(1-vaha_skupina/vaha_otazka)/vaha_otazka)))
# pivot a uspořádání tabulky dle pořadí vektor_sloupec
x_square_wide <- x_square %>% select(-popularita_odpovedi_w,-r,-vaha_skupina,-vaha_otazka) %>% arrange(!!as.symbol(name)) %>% pivot_wider(names_from = name, names_prefix = name, values_from = std_rez, values_fill = 0)
#připojení reziduí k připravené tabulce
x_square_base <- x_square_base %>% full_join(x_square_wide,c("otazka" = "otazka", "odpovedi" = "odpovedi"))
#---------------řazení základní tabulky----------------------------------------------------------------------
krizeni_radek <- krizeni %>% ungroup() %>% select(.,!!as.symbol(name), vaha_skupina, otazka)
krizeni_radek <- unique(krizeni_radek)
krizeni_radek <- krizeni_radek %>% mutate(vaha_skupina = round(vaha_skupina))
krizeni_radek <- krizeni_radek %>% rename(moznosti = !!as.symbol(name)) %>% arrange(., moznosti)
pocet_radek <- pocet_radek %>% rbind(krizeni_radek) #celkový počet napříč cykly
krizeni <- krizeni %>% select(-r,-vaha_skupina)
# pivot (a tvorba jmen sloupců) a uspořádání tabulky s procenty dle pořadí vektor_sloupec
krizeni_wide <- krizeni %>% arrange(!!as.symbol(name)) %>% pivot_wider(names_from = name,names_prefix = sprintf("%s_", name), names_glue = , values_from = procenta, values_fill = 0)
#připojení tabulky s procenty pro danou otázku k základu
long_data <-long_data %>% full_join(krizeni_wide,c("otazka" = "otazka", "odpovedi" = "odpovedi"))
}
#řazení otázek
pocet_opakovani <- df %>% select(all_of(vektor_radek)) %>% sapply(function (x) {length(levels(x))})
repeated_vector <- as_tibble(rep(vektor_radek,pocet_opakovani))
odpovedi2 <- df %>% select(all_of(vektor_radek)) %>% sapply(function (x) {levels(x)}) %>% unlist() %>% as.vector()
repeated_vector2 <- repeated_vector %>% cbind(odpovedi2)
repeated_vector2 <- repeated_vector2 %>% rename(otazka = value, odpovedi = odpovedi2)
temp <<- repeated_vector2 %>% left_join(long_data, by= c("otazka" = "otazka", "odpovedi"="odpovedi"))
temp2 <<- repeated_vector2 %>% left_join(x_square_base, by= c("otazka" = "otazka", "odpovedi"="odpovedi"))
temp <<- select(temp, c(otazka,Zneni,odpovedi, vaha_otazka, w, everything()))
# odstranění opakování otázky a její váhy v řádcích + doplnění řádku s počty případů
cur <- ""
ind0 <-0
add <-0
for (a in temp[["otazka"]]) {
if (a == cur) {
temp[[ind0+add,"Zneni"]] <<- NA
temp[[ind0+add,"vaha_otazka"]] <<- NA
}
else {
temp <<- insertRows(temp, (1 + ind0 + add + nrow(filter(temp,otazka== a))), new = c(a,rep(NA,5), filter(pocet_radek, pocet_radek$otazka == a)$vaha_skupina))
temp2 <<- insertRows(temp2, (1 + ind0 + add +nrow(filter(temp2,otazka== a))), new = c(a,rep(NA,5+length(krizeni_radek$vaha_skupina))))
add <-add+1
}
cur <- a
ind0 <-ind0+1
}
temp <- temp[1:nrow(temp)-1,]
temp2 <- temp2[1:nrow(temp2)-1,]
temp <- temp %>% mutate(across(c(-otazka,-odpovedi,-Zneni),as.numeric))
temp2 <- temp2 %>% mutate(across(c(-otazka,-odpovedi),as.numeric))
temp <- temp %>% mutate(w = round(w))
#Odstranění řádku s sys_filtered_off
temp <- temp %>% filter(odpovedi !="sys_filtered_off"| is.na(odpovedi))
temp2 <- temp2 %>% filter(odpovedi !="sys_filtered_off"| is.na(odpovedi))
temp <<- temp
temp2 <<- temp2
#přejmenování prvního řádku
temp <- temp  %>% rename_with(~str_replace_all(.,"_", " "), .cols = -c(otazka, Zneni,odpovedi,vaha_otazka,w))
temp <- temp  %>% rename(`kód otázky` = otazka,
`znění` = Zneni,
`varianty odpovědí`= odpovedi,
`počet dotázaných` = vaha_otazka,
`počet odpovědí u varianty` = w)
#určení jména souboru
file <- paste0(jmeno_souboru,".xlsx")
wb <- createWorkbook()
sheet <- createSheet(wb, "Křížení")
addDataFrame(as.data.frame(temp), sheet)
# vyříznutí okna do excelové tabulky, ke které se pak budu vztahovat
cb <- CellBlock(sheet, 2, 8, nrow(temp), ncol(temp) - 6, create = FALSE)
#podbarvení dle velikosti reziduí
x <- temp2 %>% ungroup() %>% select(-otazka, -odpovedi)
x <- sapply(x, as.numeric)
ind1 <- which(x > 1.960, arr.ind=T)
CB.setFill(cb, Fill(foregroundColor = "#AFCED5", backgroundColor = "#AFCED5"), ind1[,1], ind1[,2])
ind2 <- which(x > 3.291, arr.ind=T)
CB.setFill(cb, Fill(foregroundColor = "#699FAC", backgroundColor = "#699FAC"), ind2[,1], ind2[,2])
ind3 <- which(x < -1.960, arr.ind=T)
CB.setFill(cb, Fill(foregroundColor = "#E6B6B0", backgroundColor = "#E6B6B0"), ind3[,1], ind3[,2])
ind4 <- which(x < -3.291, arr.ind=T)
CB.setFill(cb, Fill(foregroundColor = "#CD7471", backgroundColor = "#CD7471"), ind4[,1], ind4[,2])
cb <- CellBlock(sheet, 2, 1, nrow(temp), (ncol(temp)+1), create = FALSE)
#tlusté čáry
actual <- ""
ind <- 1
for (value in temp[["kód otázky"]]) {
if (value != actual) {
actual <- value
CB.setBorder(cb, Border(color="black", position="TOP", pen="BORDER_THICK"), ind, 1:ncol( temp)+1)
}
ind <- ind + 1
}
CB.setBorder(cb, Border(color="black", position="BOTTOM", pen="BORDER_THICK"), nrow(temp), 1:ncol(temp)+1)
actual2 <- ""
ind2 <- 1
for (colname in colnames(temp)) {
str_n <- str_extract(as.character(colname),"[a-zA-Z]*[0-9]*")
if (str_n != actual2) {
actual2 <- str_n
CB.setBorder(cb, Border(color="black", position="RIGHT", pen="BORDER_THICK"), 1:nrow(temp),ind2)
}
ind2 <- ind2 + 1
}
CB.setBorder(cb, Border(color="black", position="RIGHT", pen="BORDER_THICK"), 1:nrow(temp),ncol(temp)+1)
saveWorkbook(wb, file)
}
use_r(f_krizeni)
use_r("f_krizeni")
devtools::load_all(".")
?f_krizeni
library(devtools)
use_package("tidyverse", type = "depends")
use_package("haven")
use_package("labelled")
use_package("berryFunctions")
use_package("finalfit")
use_package("xlsx")
library(devtools)
use_package("tidyverse", type = "depends")
use_package("haven")
use_package("labelled")
use_package("berryFunctions")
use_package("finalfit")
use_package("xlsx")
use_package("haven")
use_package("labelled")
use_package("berryFunctions")
use_package("finalfit")
use_package("xlsx")
devtools::load_all(".")
?f_krizeni
devtools::load_all(".")
?f_krizeni
devtools::load_all(".")
?f_krizeni
devtools::load_all(".")
?f_krizeni
?f_krizeni
devtools::load_all(".")
?f_krizeni
?f_krizeni
?f_euro
?install_local
?f_euro
devtools::load_all(".")
?f_euro
devtools::load_all(".")
?f_euro
devtools::load_all(".")
?f_euro
devtools::load_all(".")
?bubliny
library(STEM.lib)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
use_package("xyz")
use_package("forcat")
use_package("stringr")
person("First", "AAA", "first.last@example.com", role = c("aut", "cre"),
comment = c(ORCID = "YOUR-ORCID-ID"))
options(devtools.desc.author="Sarah Komasova <first.last@example.com> [aut, cre]")
options(devtools.desc.license="")
options(devtools.desc.author="Sarah Komasova <first.last@example.com> [aut, cre]")
options(devtools.desc.license="")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
options(devtools.desc.author="Sarah Komasova <first.last@example.com> [aut, cre]")
options(devtools.desc.license="")
use_package("tidyverse", type = "depends")
use_package("haven", type = "depends")
use_package("labelled", type = "depends")
library(devtools)
options(devtools.desc.author="Sarah Komasova <first.last@example.com> [aut, cre]")
options(devtools.desc.license="")
use_package("tidyverse", type = "depends")
use_package("haven", type = "depends")
use_package("labelled", type = "depends")
use_package("berryFunctions", type = "depends")
use_package("finalfit", type = "depends")
use_package("xlsx", type = "depends")
devtools::load_all(".")
options(devtools.desc.author="Sarah Komasova <first.last@example.com> [aut, cre]")
options(devtools.desc.license="")
use_package("tidyverse", type = "depends")
use_package("haven", type = "depends")
use_package("labelled", type = "depends")
use_package("berryFunctions", type = "depends")
use_package("finalfit", type = "depends")
use_package("xlsx", type = "depends")
devtools::load_all(".")
devtools::load_all(".")
install.packages("roxygen2")
library(knihovna1)
library(knihovna1)
library(knihovna1)
library(knihovna1)
library(knihovna1)
library(knihovna1)
library(knihovna1)
library(knihovna1)
install.packages("knihovna1", repos = NULL)
install.packages("knihovna1", repos = NULL)
library(knihovna1)
install.packages('roxygen2')
library(knihovna1)
library(knihovna1)
library(knihovna1)
library(knihovna1)
